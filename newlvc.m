%a = ( 8 * p_r * T_r ) / ( 3 - p_r) - 3 * p_r;
kB = 1.38064852 ; % Boltzmann Constant
i  = 90         ; % Number of Temperatures
j  = 12         ; % Number of Pressures (ignored if constant Pressure)

% Formula for creating Coexistence
% 'vdw'  % Van der Waal's
% 'hs'   % Hard Sphere
% 'sw'   % Square Well
% 'ljs'  % Lennard Jones Spline
form = 'ljs';

% "type" is the switch between varying pressure and constant pressure
% 0 = varying pressure
% 1 = constant pressure
% ignored if not using vdw
type = 0;

figure % New Figure (No overwrite)
%% ----------------------------------------

% Constant or Varying Pressure
switch type
    case 0
        typeverbose = 'varying pressure';
        title('L-V Coexistence w/ Varying Temperature and Pressure')
       %j = j   ; % Varying Pressure - defined above
    case 1
        typeverbose = 'constant pressure';
        j = 0   ; % Constant Pressure
end

% Formula for creating Coexistence
switch form
    case 'vdw' % Van der Waal's
        formverbose = 'Van der Waal''s'         ;
        a = zeros( (i+1)*(j+1)*4 , 1)           ; % Preallocation
        xlabel('Relative Density where 0 = 3p_r^3 - 9p_r^2 + (8T_r-P_r)p_r + 3P_r')
        title('L-V Coexistence w/ Varying Temperature and Constant Pressure for VdW')
    case 'hs'  % Hard Sphere
        formverbose = 'Hard Sphere'             ;
        i = 29                                  ; % #(T) (start at 0)
        %type = 0                                ; % non-constant Pressure
        title('L-V Coexistence w/ Constant Temperature and Varying Pressure for Hard Sphere')
        a = zeros( (i+1)*(j+1)*5 , 1)           ; % Preallocation
        xlabel('Relative Density where 0 = k_BT (B_1p + B_2p^2 + B_3p^3 + B_4p^4) - P')
    case 'sw'  % Square Well
        formverbose = 'Square Well'             ;
        i = 29                                  ; % #(T) (start at 0)
        %type = 1                                ; % constant Pressure
        title('L-V Coexistence w/ Varying Temperature and Constant Pressure for Square Well')
        a = zeros( (i+1)*(j+1)*5 , 1)           ; % Preallocation
        xlabel('Relative Density where 0 = k_BT (B_1p + B_2p^2 + B_3p^3 + B_4p^4) - P')
    case 'ljs' % Lennard Jones Spline
        formverbose = 'Lennard Jones Spline'    ;
        i = 29                                  ; % #(T) (start at 0)
        %type = 1                                ; % constant Pressure
        title('L-V Coexistence w/ Varying Temperature and Constant Pressure for 12-6 Spline')
        a = zeros( (i+1)*(j+1)*5 , 1)           ; % Preallocation
        xlabel('Relative Density where 0 = k_BT (B_1p + B_2p^2 + B_3p^3 + B_4p^4) - P')
end

ylabel('Relative Temperature')
hold on % Plot each point individually


fprintf('%s, %s\n',formverbose,typeverbose)

%% -------------------------------
% Data

switch form
    case 'vdw'
    case 'hs'
        %T_r = [1.0000000,1.3793103,1.7586207,2.1379310,2.5172414,2.8965517,3.2758621,3.6551724,4.0344828,4.4137931,4.7931034,5.1724138,5.5517241,5.9310345,6.3103448,6.6896552,7.0689655,7.4482759,7.8275862,8.2068966,8.5862069,8.9655172,9.3448276,9.7241379,10.1034483,10.4827586,10.8620690,11.2413793,11.6206897,12.0000000]   ;
        %B2  = [2.0943951,2.0943951,2.0943951,2.0943951,2.0943951,2.0943951,2.0943951,2.0943951,2.0943951,2.0943951,2.0943951,2.0943951,2.0943951,2.0943951,2.0943951,2.0943951,2.0943951,2.0943951,2.0943951,2.0943951,2.0943951,2.0943951,2.0943951,2.0943951,2.0943951,2.0943951,2.0943951,2.0943951,2.0943951,2.0943951]         ;
        %B3  = [2.7455163,2.7385681,2.7402467,2.7425160,2.7399133,2.7393518,2.7414457,2.7408023,2.7374861,2.7417732,2.7377318,2.7369831,2.7451011,2.7424984,2.7411649,2.7436564,2.7443466,2.7382815,2.7471715,2.7425803,2.7439547,2.7432529,2.7427558,2.7432587,2.7429722,2.7403461,2.7416504,2.7408725,2.7393811,2.7407087]         ;
        %B4  = [2.6245917,2.6762046,2.6573711,2.5891849,2.6750562,2.6591259,2.6380508,2.6584828,2.6300764,2.6774173,2.6699482,2.6042333,2.6603937,2.6538066,2.6475226,2.6350099,2.6301591,2.6331173,2.6590799,2.6409631,2.6288729,2.6522999,2.6204484,2.6415235,2.6894707,2.6405313,2.6024969,2.6491487,2.6374995,2.6599159]         ;
        
        T_r = [1.0000000, 1.0020408, 1.0040816, 1.0061224, 1.0081633, 1.0102041, 1.0122449, 1.0142857, 1.0163265, 1.0183673, 1.0204082, 1.0224490, 1.0244898, 1.0265306, 1.0285714, 1.0306122, 1.0326531, 1.0346939, 1.0367347, 1.0387755, 1.0408163, 1.0428571, 1.0448980, 1.0469388, 1.0489796, 1.0510204, 1.0530612, 1.0551020, 1.0571429, 1.0591837, 1.0612245, 1.0632653, 1.0653061, 1.0673469, 1.0693878, 1.0714286, 1.0734694, 1.0755102, 1.0775510, 1.0795918, 1.0816327, 1.0836735, 1.0857143, 1.0877551, 1.0897959, 1.0918367, 1.0938776, 1.0959184, 1.0979592, 1.1000000];
        B2  = [2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951, 2.0943951];
        B3  = [2.7455163, 2.7385681, 2.7402467, 2.7425160, 2.7399133, 2.7393518, 2.7414457, 2.7408023, 2.7374861, 2.7417732, 2.7377318, 2.7369831, 2.7451011, 2.7424984, 2.7411649, 2.7436564, 2.7443466, 2.7382815, 2.7471715, 2.7425803, 2.7439547, 2.7432529, 2.7427558, 2.7432587, 2.7429722, 2.7403461, 2.7416504, 2.7408725, 2.7393811, 2.7407087, 2.7394162, 2.7445103, 2.7404923, 2.7380944, 2.7439606, 2.7374803, 2.7412176, 2.7386792, 2.7430599, 2.7407906, 2.7377142, 2.7435102, 2.7429663, 2.7420071, 2.7410129, 2.7414983, 2.7439489, 2.7468908, 2.7437208, 2.7428318];
        B4  = [2.6245917, 2.6762046, 2.6573711, 2.5891849, 2.6750562, 2.6591259, 2.6380508, 2.6584828, 2.6300764, 2.6774173, 2.6699482, 2.6042333, 2.6603937, 2.6538066, 2.6475226, 2.6350099, 2.6301591, 2.6331173, 2.6590799, 2.6409631, 2.6288729, 2.6522999, 2.6204484, 2.6415235, 2.6894707, 2.6405313, 2.6024969, 2.6491487, 2.6374995, 2.6599159, 2.6315463, 2.6438662, 2.6506462, 2.6315372, 2.6862644, 2.6352763, 2.6488639, 2.5961762, 2.5810727, 2.6041230, 2.6550284, 2.6408253, 2.6035350, 2.6200350, 2.5993457, 2.6332092, 2.6491763, 2.6357356, 2.6470724, 2.6200901];
        
        B5  = 0;
    case 'sw'
        %T_r = [1.0000000,1.3793103,1.7586207,2.1379310,2.5172414,2.8965517,3.2758621,3.6551724,4.0344828,4.4137931,4.7931034,5.1724138,5.5517241,5.9310345,6.3103448,6.6896552,7.0689655,7.4482759,7.8275862,8.2068966,8.5862069,8.9655172,9.3448276,9.7241379,10.1034483,10.4827586,10.8620690,11.2413793,11.6206897,12.0000000]   ;
        %B2  = [-6.4521664,-3.2014012,-1.7147235,-0.8718468,-0.3314595,0.0436649,0.3189467,0.5294122,0.6954658,0.8297824,0.9406436,1.0336860,1.1128774,1.1810910,1.2404576,1.2925912,1.3387358,1.3798662,1.4167566,1.4500298,1.4801926,1.5076611,1.5327806,1.5558400,1.5770824,1.5967143,1.6149121,1.6318273,1.6475908,1.6623163]    ;
        %B3  = [1.3976673,4.0044599,2.9366602,2.3902416,1.7205881,0.1981103,1.6695064,1.6948769,1.7096447,1.7120327,1.7612540,1.8404526,1.8149263,1.8666037,1.9031488,1.9232265,1.9620853,1.9966590,2.0135571,2.0222336,2.0613922,2.0520903,2.0872818,2.1306377,2.1266014,2.1625883,2.1635307,2.1683320,2.2027600,2.2035174]         ;
        %B4  = [-10.6328319,5.9999116,1.9280415,-0.5710736,-3387.6183388,0.0648871,-2.8288117,13.9688448,1.1583475,2.6703490,2.4487811,1.0780075,2.8909201,2.0183233,2.6298092,2.1496807,2.2133464,2.4958848,2.6025446,2.4776681,2.8630862,2.4718641,2.3189931,2.3391545,2.5746416,2.6000299,2.7809690,2.6227335,2.6116030,2.2479526];
        
        T_r = [1.0000000, 1.0020408, 1.0040816, 1.0061224, 1.0081633, 1.0102041, 1.0122449, 1.0142857, 1.0163265, 1.0183673, 1.0204082, 1.0224490, 1.0244898, 1.0265306, 1.0285714, 1.0306122, 1.0326531, 1.0346939, 1.0367347, 1.0387755, 1.0408163, 1.0428571, 1.0448980, 1.0469388, 1.0489796, 1.0510204, 1.0530612, 1.0551020, 1.0571429, 1.0591837, 1.0612245, 1.0632653, 1.0653061, 1.0673469, 1.0693878, 1.0714286, 1.0734694, 1.0755102, 1.0775510, 1.0795918, 1.0816327, 1.0836735, 1.0857143, 1.0877551, 1.0897959, 1.0918367, 1.0938776, 1.0959184, 1.0979592, 1.1000000];
        B2  = [-6.4521664, -6.4246573, -6.3973156, -6.3701399, -6.3431287, -6.3162806, -6.2895942, -6.2630681, -6.2367009, -6.2104912, -6.1844376, -6.1585389, -6.1327936, -6.1072006, -6.0817584, -6.0564658, -6.0313215, -6.0063244, -5.9814730, -5.9567663, -5.9322029, -5.9077817, -5.8835016, -5.8593612, -5.8353596, -5.8114954, -5.7877676, -5.7641751, -5.7407166, -5.7173913, -5.6941978, -5.6711353, -5.6482025, -5.6253985, -5.6027221, -5.5801725, -5.5577484, -5.5354490, -5.5132733, -5.4912201, -5.4692887, -5.4474779, -5.4257868, -5.4042145, -5.3827600, -5.3614225, -5.3402009, -5.3190944, -5.2981020, -5.2772229];
        B3  = [1.3976673, 1.4444778, 1.4703976, 1.4248368, 1.7154364, 1.7371827, 1.7251141, 1.8074745, 1.7137892, 1.9537783, 2.1345410, 1.9969003, 2.2838357, 2.2066594, 2.2502849, 2.1820022, 2.2278597, 2.6347532, 2.5462111, 2.3932977, 2.6701523, 2.5983205, 2.4062603, 2.8467133, 2.4457774, 2.6775268, 2.6401400, 2.7046685, 2.8271338, 2.8763283, 3.0048357, 2.9298941, 3.0631227, 3.0969216, 2.9904760, 3.0019890, 2.9024029, 3.2774713, 3.3007847, 3.2209511, 3.2815630, 3.2492950, 3.4930479, 3.2689658, 3.5339477, 3.3535235, 3.6729174, 3.5414198, 3.6387425, 3.4884901];
        B4  = [-10.6328319, -0.4833847, -1.5015557, 4.6411155, -0.6467808, -19.5814299, -1.5728717, -0.2994039, 2.4787086, 8.7031771, -14.4758135, 1.4882772, 4.6123176, -2.3633993, 0.9686584, -2.3418256, 3.8819632, 6.4189859, -1.7730209, 1.6561927, -1.9863297, -4.6461797, 3.4383935, 7.9682789, 8.4484142, 14.4543232, 7.0709224, 8.0991540, 14.0282704, 6.0449548, 3.6412554, 8.6684198, 5.8111463, -1.7069645, 24.4396676, 7.2460578, 5.8868445, 9.2294839, 1.6341541, 19.1794553, 12.3854012, 3.5218386, 15.8206401, 9.5763097, 14.5216582, 7.4864430, 4.0169917, 9.8343428, 8.2238026, 9.1140056];
        
        B5  = 0;
    case 'ljs'
        %T_r = [1.0000000,1.3793103,1.7586207,2.1379310,2.5172414,2.8965517,3.2758621,3.6551724,4.0344828,4.4137931,4.7931034,5.1724138,5.5517241,5.9310345,6.3103448,6.6896552,7.0689655,7.4482759,7.8275862,8.2068966,8.5862069,8.9655172,9.3448276,9.7241379,10.1034483,10.4827586,10.8620690,11.2413793,11.6206897,12.0000000]   ;
        %B2  = [-2.9326055,-1.2729653,-0.4811624,-0.0247993,0.2684965,0.4708077,0.6174419,0.7276699,0.8128739,0.8801941,0.9343281,0.9784872,1.0149379,1.0453231,1.0708612,1.0924734,1.1108684,1.1265998,1.1401054,1.1517362,1.1617759,1.1704565,1.1779694,1.1844732,1.1901011,1.1949650,1.1991599,1.2027668,1.2058549,1.2084840]     ;
        %B3  = [3.3704598,2.2109535,1.7503408,0.0150748,1.2458894,1.4811507,1.4387677,1.3585765,1.2849777,1.2784611,1.3202239,1.2999094,1.3197115,1.2877384,1.3088205,1.2895817,1.3002519,1.2839701,1.2743362,1.2739596,1.2657256,1.2412445,1.2391923,1.2490406,1.2253344,1.2488454,1.2301551,1.2060686,1.2101585,1.1979244]         ;
        %B4  = [6.5984329,0.7328248,10.5281327,0.0007857,-1.1512796,-1.6576098,-0.4325023,2.6998823,0.5754506,2.2112543,1.0609394,0.7051926,1.7117997,1.1779327,1.4741492,0.8737619,0.9380811,1.0676639,0.9509910,1.0100257,1.1425653,1.2796697,0.7190779,1.1943197,1.1226152,0.7351070,0.9095796,1.0664191,1.1028018,0.5618565]     ;
        
        T_r = [1.0000000, 1.0020408, 1.0040816, 1.0061224, 1.0081633, 1.0102041, 1.0122449, 1.0142857, 1.0163265, 1.0183673, 1.0204082, 1.0224490, 1.0244898, 1.0265306, 1.0285714, 1.0306122, 1.0326531, 1.0346939, 1.0367347, 1.0387755, 1.0408163, 1.0428571, 1.0448980, 1.0469388, 1.0489796, 1.0510204, 1.0530612, 1.0551020, 1.0571429, 1.0591837, 1.0612245, 1.0632653, 1.0653061, 1.0673469, 1.0693878, 1.0714286, 1.0734694, 1.0755102, 1.0775510, 1.0795918, 1.0816327, 1.0836735, 1.0857143, 1.0877551, 1.0897959, 1.0918367, 1.0938776, 1.0959184, 1.0979592, 1.1000000];
        B2  = [-2.9326055, -2.9189518, -2.9053751, -2.8918747, -2.8784501, -2.8651005, -2.8518255, -2.8386243, -2.8254965, -2.8124413, -2.7994583, -2.7865468, -2.7737062, -2.7609361, -2.7482358, -2.7356048, -2.7230426, -2.7105485, -2.6981221, -2.6857629, -2.6734702, -2.6612436, -2.6490826, -2.6369866, -2.6249551, -2.6129878, -2.6010839, -2.5892432, -2.5774650, -2.5657489, -2.5540944, -2.5425010, -2.5309684, -2.5194960, -2.5080833, -2.4967300, -2.4854355, -2.4741995, -2.4630214, -2.4519009, -2.4408375, -2.4298307, -2.4188803, -2.4079857, -2.3971466, -2.3863625, -2.3756330, -2.3649577, -2.3543362, -2.3437682];
        B3  = [3.3704598, 3.3143089, 3.4494341, 3.0906877, 3.4038617, 3.4219584, 3.3100429, 3.2614450, 3.1059368, 3.3268581, 3.4134675, 3.3052823, 3.4364321, 3.2673489, 3.3563408, 3.1978825, 3.2783178, 3.3399730, 3.2580651, 3.2537638, 3.2776412, 3.2573487, 3.3559117, 3.2288406, 3.1489412, 3.2938543, 3.1389819, 3.2324375, 3.2116057, 3.2529907, 3.0352833, 3.1735314, 3.2806447, 3.1419039, 3.1045853, 3.1831006, 3.2335453, 3.1483755, 3.1832558, 3.1690969, 3.0638204, 3.2257073, 3.1658286, 2.9165883, 3.1416144, 3.0762016, 3.0412286, 3.0780095, 3.2085189, 3.0642510];
        B4  = [6.5984329, 6.4792230, 5.5316415, 9.2570879, 3.1115646, 4.1157124, 2.9706388, -1.4719245, 0.8878292, 3.5079009, 4.4608107, 3.9051496, 3.9482633, 1.2538330, 4.8308278, 2.8470375, 2.6396259, -0.3831172, 6.2152096, 1.1748785, 7.9793769, 6.6890906, 3.7667134, 3.0785663, -1.1784844, 1.0304438, 6.5842589, 5.7258469, 1.2686926, 1.5780559, 1.7128603, 3.1765453, 3.7536913, 2.9938339, 7.2760045, 4.8223419, 2.9132981, 2.2860747, 5.7813420, 7.4911950, -0.3125284, 3.1139148, 4.4070210, 1.7557394, 2.4530360, 5.2739902, 1.6084259, -0.2763692, 3.2331966, 2.4005072];
        
        B5  = 0;
end

%% -------------------------------

for T = 0:i
    for P=0:j
        switch form
            case 'vdw'  % Van der Waal's
              % Polynomial = [3      - 9        (8*T_r - P_r)     3*P_r] ;
              %          0 =  3p_r^3 - 9p_r^2 + ( 8T_r - P_r)p_r + 3P_r
                b = T*(j+1)*4 + P*4 ; % Storing each value in "a(b+x)"
                                      % where x is each term of the poly'.
              % a = part of polynomial being solved and then plotted
                a(b + 1) =  3                                       ;
                a(b + 2) = -9                                       ;
                switch type
                    case 0
                        a(b + 3) = ( 8 * (T)/(i-1)  -  (P)/(j-1) )  ;
                        a(b + 4) = (  3 * (P)/(j-1)              )  ;
                    case 1
                        a(b + 3) = ( 8 * (T)/(i-1)  -  (P)/(4)   )  ;
                        a(b + 4) = (  3 * (P)/(4)                )  ;
                end
              % c = assembled polynomial
                c = [ a(b+1) a(b+2) a(b+3) a(b+4) ]                 ;
            case 'hs'   % Hard Sphere
                b = T*(j+1)*5 + P*5 ; % Storing each value in "a(b+x)"
                                      % where x is each term of the poly'.
              % a = part of polynomial being solved and then plotted
                a(b + 1) =  1       * kB * T_r(T+1)                 ;
                a(b + 2) =  B2(T+1) * kB * T_r(T+1)                 ;
                a(b + 3) =  B3(T+1) * kB * T_r(T+1)                 ;
                a(b + 4) =  B4(T+1) * kB * T_r(T+1)                 ;
                %a(b + 5) =  B5(T+1) * kB * T_r(T+1)                 ;
              % c = assembled polynomial
                %c = [ a(b+1) a(b+2) a(b+3) a(b+4) a(b+5) ]          ;
                c = [ a(b+1) a(b+2) a(b+3) a(b+4) 0 ]                 ;
            case 'sw'   % Square Well
                b = T*(j+1)*5 + P*5 ; % Storing each value in "a(b+x)"
                                      % where x is each term of the poly'.
              % a = part of polynomial being solved and then plotted
                a(b + 1) =  1       * kB * T_r(T+1)                 ;
                a(b + 2) =  B2(T+1) * kB * T_r(T+1)                 ;
                a(b + 3) =  B3(T+1) * kB * T_r(T+1)                 ;
                a(b + 4) =  B4(T+1) * kB * T_r(T+1)                 ;
                %a(b + 5) =  B5(T+1) * kB * T_r(T+1)                 ;
              % c = assembled polynomial
                %c = [ a(b+1) a(b+2) a(b+3) a(b+4) a(b+5) ]          ;
                c = [ a(b+1) a(b+2) a(b+3) a(b+4) 0 ]                 ;
            case 'ljs'  % Lennard Jones Spline
                b = T*(j+1)*5 + P*5 ; % Storing each value in "a(b+x)"
                                      % where x is each term of the poly'.
              % a = part of polynomial being solved and then plotted
                a(b + 1) =  1       * kB * T_r(T+1)                 ;
                a(b + 2) =  B2(T+1) * kB * T_r(T+1)                 ;
                a(b + 3) =  B3(T+1) * kB * T_r(T+1)                 ;
                a(b + 4) =  B4(T+1) * kB * T_r(T+1)                 ;
                %a(b + 5) =  B5(T+1) * kB * T_r(T+1)                 ;
              % c = assembled polynomial
                %c = [ a(b+1) a(b+2) a(b+3) a(b+4) a(b+5) ]          ;
                c = [ a(b+1) a(b+2) a(b+3) a(b+4) 0 ]                 ;
        end
        
        % Solving assembled polynomial
        d = roots(c)                                                ;
        
        % Printing iterations and values
        %fprintf('%f\t%f\t%f\t%f\t\t \n',T,P,(b/4),a(b + 1))
        
        switch rem(P+1,6)
            case 1
                graphstring='*b';
            case 2
                graphstring='*g';
            case 3
                graphstring='*r';
            case 4
                graphstring='*c';
            case 5
                graphstring='*m';
            case 6
                graphstring='*y';
            case 0
                graphstring='*k';
        end
        
        % Printing which graph color will be used
        %fprintf('%f\t%s\t',rem(P_r+1,6),graphstring)
        
        if isreal( d(1) )
            plot(d(1),T,graphstring)
        end
        if isreal( d(2) )
            plot(d(2),T,graphstring)
        end
        if isreal( d(3) )
            plot(d(3),T,graphstring)
        end
        if isreal( d(4) )
            plot(d(4),T,graphstring)
        end
        
        % Printing the solutions including imaginary parts
        fprintf('%s\t%s\t%s\t',num2str(d(1)),num2str(d(2)),num2str(d(3)))
        
        % Allows multiple printing easiest without having to worry about \n
        fprintf('\n')
        
    end
end

hold off